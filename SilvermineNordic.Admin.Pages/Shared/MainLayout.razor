@inherits LayoutComponentBase
@using SilvermineNordic.Models
@using SilvermineNordic.Admin.Services
@inject HttpClient Http
@inject ICookie cookie
@inject IGlobalService GlobalService

<header>
    <!-- Navbar -->
    <nav class="navbar navbar-expand-lg navbar-light bg-white" style="position: absolute; left: 50%; transform: translateX(-50%)">
        <div class="container-fluid">
            <button class="navbar-toggler"
                    type="button"
                    data-mdb-toggle="collapse"
                    data-mdb-target="#navbarExample01"
                    aria-controls="navbarExample01"
                    aria-expanded="false"
                    aria-label="Toggle navigation">
                <i class="fas fa-bars"></i>
            </button>
            @*<div class="collapse navbar-collapse" id="navbarExample01">*@
            <ul class="navbar-nav me-auto mb-2 mb-lg-0">
                <li class="nav-item active">
                    <a class="nav-link" href="/">Home</a>
                </li>
                <li class="nav-item" style="@LoggedOutNavStyle">
                    <a class="nav-link" href="/login">Login</a>
                </li>
                <li class="nav-item" style="@LoggedInNavStyle">
                    <a class="nav-link" href="/profile">@LoggedInText</a>
                </li>
                <li class="nav-item" style="@LoggedInNavStyle">
                    <a class="nav-link" href="/logout">Logout</a>
                </li>
            </ul>
            @*</div>*@
        </div>
    </nav>
    <!-- Navbar -->
</header>
<br />
<div class="page">
    <div class="container">
        <CascadingValue Value="this">
            @Body
        </CascadingValue>
    </div>
</div>

@code {
    private string ApiUrl = "";
    private string LoggedInText { get; set; } = "Welcome";
    private string LoggedOutNavStyle { get; set; } = "display: block;";
    private string LoggedInNavStyle { get; set; } = "display: none;";
    private User user;

    protected override async Task OnInitializedAsync()
    {
        ApiUrl = GlobalService.GetApiUrl();
        var userAuthKey = await cookie.GetValue("UserAuthKey");
        if (!string.IsNullOrWhiteSpace(userAuthKey))
        {
            user = await GlobalService.GetUser(Http, userAuthKey);
        }
        SetLoggedInStatus(user is not null, user);
    }

    public void SetLoggedInStatus(bool isLoggedIn, User user = null)
    {
        if (isLoggedIn && user != null)
        {
            var usernameText = "";
            if (user.Name != null)
            {
                usernameText = $", {user.Name}";
            }
            LoggedInText = $"Welcome{usernameText}";
            LoggedOutNavStyle = "display: none;";
            LoggedInNavStyle = "display: block;";
        }
        else
        {
            LoggedOutNavStyle = "display: block;";
            LoggedInNavStyle = "display: none;";
            LoggedInText = $"Welcome";
        }
    }
}