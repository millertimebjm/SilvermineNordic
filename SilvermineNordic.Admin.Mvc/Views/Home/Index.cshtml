@using SilvermineNordic.Admin.Mvc.Services;
@using SilvermineNordic.Admin.Mvc.Models;
@model IndexModel

@{
    var weatherReadings = await Model.WeatherReadingsTask;
    var sensorReadings = await Model.SensorReadingsTask;
    var weatherForecasts = await Model.WeatherForecastTask;
    var thresholds = await Model.ThresholdsTask;

    var weatherForecastChartData = "";
    var first = true;
    var day = DateTime.MinValue.Day;
    var accumulated = 0.0m;
    foreach (var weatherForecast in weatherForecasts)
    {
        var dayOfTheWeekShort = weatherForecast.DateTimeUtc.ConvertUtcToTimezone("Central Standard Time")?.ToString("ddd") + " ";
        var time = $"\"{dayOfTheWeekShort}{weatherForecast.DateTimeUtc.ConvertUtcToTimezone("Central Standard Time")?.ToString("htt")}\"";
        if (!first) weatherForecastChartData += ","; 
        var snowfallInIn = weatherForecast.SnowfallInCm.ConvertCentimetersToInches().RoundToOneDecimal();
        accumulated += snowfallInIn;
        //weatherForecastChartData += $@"{{ time: {time}, count: {snowfallInIn} }}";
        weatherForecastChartData += $@"{{ time: {time}, count: {snowfallInIn}, accumulated: {(snowfallInIn > 0 ? accumulated : 0)} }}";
        first = false;
    }
}

@section scripts {
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
}

<div class="container">
    <h1 class="title">Silvermine Nordic<br />Snow Making</h1>
    <div class="grid">
        <h3 class="cardwithoutborder">
            <button class="button">Refresh</button>
        </h3>
    </div>
    <div class="grid">
        @{
            var lastSensorReadingsText = "";
            if (sensorReadings.Any())
            {
                lastSensorReadingsText = $"<br />{Math.Round(sensorReadings.First().TemperatureInCelcius.ConvertCelciusToFahrenheit(), 0)}°F {Math.Round(sensorReadings.First().Humidity, 0)}%";
        }
        }
        <h3 class="card">Last Sensor @Html.Raw(lastSensorReadingsText)</h3>
        @{
            var lastWeatherReadingsText = "";
            if (weatherReadings.Any())
            {
                lastWeatherReadingsText = $"<br />{Math.Round(weatherReadings.First().TemperatureInCelcius.ConvertCelciusToFahrenheit(), 0)}°F {Math.Round(weatherReadings.First().Humidity, 0)}%";
            }
        }
        <h3 class="card">Last Weather @Html.Raw(lastWeatherReadingsText)</h3>
        @{
            var lastReading = sensorReadings.FirstOrDefault();
            if ((lastReading?.DateTimeUtc ?? DateTime.MinValue) <
            (weatherReadings.FirstOrDefault()?.DateTimeUtc ??
            DateTime.MinValue))
                lastReading = weatherReadings.First();
            var inTheZone = false;
            if (lastReading != null)
            {
                inTheZone = SilvermineNordic.Common.InTheZoneService.IsInZone(thresholds, lastReading.TemperatureInCelcius,
                    lastReading.Humidity);
            }
        }
        <h3 class="card">In The Zone <br />@(inTheZone)</h3>
        <h3 class="card">Zone Forecast <br />@(((await Model.NextZoneChangeTask)?.ToString("ddd h:mm")) ?? "No Forecast")</h3>
        </div>
        
        <div style="max-width: 800px; margin: 0 auto; width: 100%;"><canvas id="acquisitions"></canvas></div>
        
        <script type="text/javascript">
            const data = [
                @Html.Raw(weatherForecastChartData)
            ];
            const ctx = document.getElementById('acquisitions').getContext('2d');

            const myChart = new Chart(ctx, {
                type: 'bar',
                data: {
                    labels: data.map(row => row.time),
                    datasets: [{
                        label: 'Snow Forecast By Inches',
                        data: data.map(row => row.count),
                        backgroundColor: 'rgba(73, 124, 155, 0.2)', // Optional: Set bar color
                        borderColor: 'rgba(73, 124, 155, 1)', // Optional: Set border color
                        borderWidth: 1 // Optional: Set border width
                    },
                    {
                        label: 'Snow Accumulated By Inches',
                        data: data.map(row => row.accumulated),
                        backgroundColor: 'rgba(153, 204, 255, 0.2)', // Optional: Set bar color
                        borderColor: 'rgba(153, 204, 255, 1)', // Optional: Set border color
                        borderWidth: 1 // Optional: Set border width
                    }]
                },
                options: { // Optional: Customize chart appearance
                    scales: {
                        y: {
                            beginAtZero: true, // Optional: Start y-axis at zero
                            suggestedMax: 3
                        }
                    }
                }
            });
        </script>

        <div class="grid">
            <div class="tablecard">
                <h3 class="description">Weather Reading</h3>
                <table class="table">
                    <thead>
                        <tr>
                            <th>DateTime</th>
                            <th>Temp</th>
                            <th>Hum</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var wr in weatherReadings)
                        {
                            <tr key="0">
                                <td>@wr.DateTimeUtc.ConvertUtcToTimezone("Central Standard Time")?.ToString("ddd h:mm")</td>
                                <td>@wr.TemperatureInCelcius.ConvertCelciusToFahrenheit().RoundToOneDecimal()°</td>
                                <td>@wr.Humidity.RoundToOneDecimal()%</td>
                            </tr>
                        }
                        @if (!weatherReadings.Any())
                        {
                            <tr>
                                <td colSpan="4">No data available</td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
            <div class="tablecard">
                <h3 class="description">Sensor Readings</h3>
                <table class="table">
                    <thead>
                        <tr>
                            <th>DateTime</th>
                            <th>Temp</th>
                            <th>Hum</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var sr in sensorReadings)
                        {
                            <tr key="0">
                                <td>@sr.DateTimeUtc.ConvertUtcToTimezone("Central Standard Time")?.ToString("ddd h:mm")</td>
                                <td>@sr.TemperatureInCelcius.ConvertCelciusToFahrenheit().RoundToOneDecimal()°</td>
                                <td>@sr.Humidity.RoundToOneDecimal()%</td>
                            </tr>
                        }
                        @if (!sensorReadings.Any())
                        {
                            <tr>
                                <td colSpan="3">No data available</td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
            <div class="tablecard">
                <h3 class="description">Thresholds</h3>
                <table class="table">
                    <thead>
                        <tr>
                            <th>Temp Low</th>
                            <th>Temp High</th>
                            <th>Hum Low</th>
                            <th>Hum High</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var t in thresholds)
                        {
                            <tr key="0                    ">
                                <td>@t.TemperatureInCelciusLowThreshold.ConvertCelciusToFahrenheit().RoundToOneDecimal()°</td>
                                <td>@t.TemperatureInCelciusHighThreshold.ConvertCelciusToFahrenheit().RoundToOneDecimal()°</td>
                                <td>@t.HumidityLowThreshold.RoundToOneDecimal()%</td>
                                <td>@t.HumidityHighThreshold.RoundToOneDecimal()%</td>
                            </tr>
                        }
                        @if (!thresholds.Any())
                        {
                            <tr>
                                <td colSpan="4">No data available</td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
            <div class="tablecard">
                <h3 class="description">Weather Forecast</h3>
                <table class="table">
                    <thead>
                        <tr>
                            <th>DateTime</th>
                            <th>Temp</th>
                            <th>Hum</th>
                            <th>SnowIn</th>
                            <th>Zone</th>
                        </tr>
                    </thead>
                    @foreach (var wf in weatherForecasts)
                    {
                        <tr key="0">
                            <td>@wf.DateTimeUtc.ConvertUtcToTimezone("Central Standard Time")?.ToString("ddd h:mm")</td>
                            <td>@wf.TemperatureInCelcius.ConvertCelciusToFahrenheit().RoundToOneDecimal()°</td>
                            <td>@wf.Humidity.RoundToOneDecimal()%</td>
                            <td>@wf.SnowfallInCm.ConvertCentimetersToInches().RoundToOneDecimal()</td>
                            @if (wf.InTheZone)
                            {
                                <td><span style="color:green; font-size: 20px;">✔</span></td>
                            }
                            else 
                            {
                                <td></td>
                            }
                        </tr>
                    }
                    @if (!weatherForecasts.Any())
                    {
                        <tr>
                            <td colSpan="4">No data available</td>
                        </tr>
                    }
                    </tbody>
                </table>
            </div>
        </div>
    </div>

