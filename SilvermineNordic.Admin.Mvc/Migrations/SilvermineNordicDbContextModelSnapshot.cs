// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using SilvermineNordic.Repository.Services;

#nullable disable

namespace SilvermineNordic.Admin.Mvc.Migrations
{
    [DbContext(typeof(SilvermineNordicDbContext))]
    partial class SilvermineNordicDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("SilvermineNordic.Models.CommunicationLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("CommunicationTypeId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("DateTimestampUtc")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Destination")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Subject")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("Success")
                        .HasColumnType("boolean");

                    b.Property<int>("Type")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("CommunicationLogs");
                });

            modelBuilder.Entity("SilvermineNordic.Models.Reading", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DateTimeUtc")
                        .HasColumnType("timestamp with time zone");

                    b.Property<decimal>("Humidity")
                        .HasColumnType("numeric");

                    b.Property<decimal>("TemperatureInCelcius")
                        .HasColumnType("numeric");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Reading", (string)null);
                });

            modelBuilder.Entity("SilvermineNordic.Models.Threshold", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<decimal>("HumidityHighThreshold")
                        .HasColumnType("numeric");

                    b.Property<decimal>("HumidityLowThreshold")
                        .HasColumnType("numeric");

                    b.Property<decimal>("TemperatureInCelciusHighThreshold")
                        .HasColumnType("numeric");

                    b.Property<decimal>("TemperatureInCelciusLowThreshold")
                        .HasColumnType("numeric");

                    b.HasKey("Id");

                    b.ToTable("Threshold", (string)null);
                });

            modelBuilder.Entity("SilvermineNordic.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("Deleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime?>("LastLoggedInUtc")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("User", (string)null);
                });

            modelBuilder.Entity("SilvermineNordic.Models.UserOtp", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<Guid>("AuthKey")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedDateTimestampUtc")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("Exhausted")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("LastUsedDateTimestampUtc")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("Otp")
                        .HasColumnType("uuid");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("UserOtp", (string)null);
                });
#pragma warning restore 612, 618
        }
    }
}
